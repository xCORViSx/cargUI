# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.71"
name = "raw-window-metal"
version = "1.1.0"
build = false
exclude = [".github/*"]
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Interop library between Metal and raw-window-handle"
documentation = "https://docs.rs/raw-window-metal"
readme = "README.md"
keywords = [
    "window",
    "metal",
    "graphics",
]
categories = [
    "game-development",
    "graphics",
    "os::macos-apis",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/rust-windowing/raw-window-metal"

[package.metadata.docs.rs]
rustdoc-args = [
    "--cfg",
    "docsrs",
]
targets = [
    "x86_64-apple-darwin",
    "aarch64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-ios-macabi",
    "x86_64-apple-ios",
]

[lib]
name = "raw_window_metal"
path = "src/lib.rs"

[dev-dependencies.raw-window-handle]
version = "0.6.0"

[features]
alloc = []
default = ["std"]
std = ["alloc"]

[target.'cfg(all(target_vendor = "apple", not(target_os = "macos")))'.dev-dependencies.objc2-ui-kit]
version = "0.3.0"
features = [
    "UIResponder",
    "UIView",
]
default-features = false

[target.'cfg(target_os = "macos")'.dev-dependencies.objc2-app-kit]
version = "0.3.0"
features = [
    "NSResponder",
    "NSView",
]
default-features = false

[target.'cfg(target_vendor = "apple")'.dependencies.objc2]
version = "0.6.0"

[target.'cfg(target_vendor = "apple")'.dependencies.objc2-core-foundation]
version = "0.3.0"
features = ["CFCGTypes"]
default-features = false

[target.'cfg(target_vendor = "apple")'.dependencies.objc2-foundation]
version = "0.3.0"
features = [
    "objc2-core-foundation",
    "NSDictionary",
    "NSGeometry",
    "NSKeyValueObserving",
    "NSObjCRuntime",
    "NSString",
    "NSThread",
    "NSValue",
]
default-features = false

[target.'cfg(target_vendor = "apple")'.dependencies.objc2-quartz-core]
version = "0.3.0"
features = [
    "objc2-metal",
    "objc2-core-foundation",
    "CALayer",
    "CAMetalLayer",
]
default-features = false
