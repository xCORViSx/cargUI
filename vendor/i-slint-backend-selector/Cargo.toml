# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.85"
name = "i-slint-backend-selector"
version = "1.13.1"
authors = ["Slint Developers <info@slint.dev>"]
build = "build.rs"
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Helper crate to pick the default rendering backend for Slint"
homepage = "https://slint.dev"
readme = "README.md"
license = "GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0"
repository = "https://github.com/slint-ui/slint"
resolver = "3"

[package.metadata.docs.rs]
rustdoc-args = ["--generate-link-to-definition"]

[features]
accessibility = ["i-slint-backend-winit?/accessibility"]
backend-linuxkms = ["i-slint-backend-linuxkms/libseat"]
backend-linuxkms-noseat = ["i-slint-backend-linuxkms"]
backend-qt = ["i-slint-backend-qt/enable"]
backend-winit = [
    "backend-winit-x11",
    "backend-winit-wayland",
]
backend-winit-wayland = ["i-slint-backend-winit/wayland"]
backend-winit-x11 = ["i-slint-backend-winit/x11"]
default = [
    "i-slint-backend-qt",
    "backend-winit",
]
raw-window-handle-06 = [
    "i-slint-core/raw-window-handle-06",
    "i-slint-backend-winit?/raw-window-handle-06",
]
renderer-femtovg = [
    "i-slint-backend-winit?/renderer-femtovg",
    "i-slint-backend-linuxkms?/renderer-femtovg",
]
renderer-femtovg-wgpu = ["i-slint-backend-winit?/renderer-femtovg-wgpu"]
renderer-skia = [
    "i-slint-backend-winit?/renderer-skia",
    "i-slint-backend-linuxkms?/renderer-skia",
]
renderer-skia-opengl = [
    "i-slint-backend-winit?/renderer-skia-opengl",
    "i-slint-backend-linuxkms?/renderer-skia-opengl",
    "i-slint-renderer-skia/opengl",
]
renderer-skia-vulkan = [
    "i-slint-backend-winit?/renderer-skia-vulkan",
    "i-slint-backend-linuxkms?/renderer-skia-vulkan",
    "i-slint-renderer-skia/vulkan",
]
renderer-software = [
    "i-slint-backend-winit?/renderer-software",
    "i-slint-backend-linuxkms?/renderer-software",
    "i-slint-core/software-renderer",
]
rtti = [
    "i-slint-core/rtti",
    "i-slint-backend-qt?/rtti",
]
system-testing = ["i-slint-backend-testing/system-testing"]
unstable-libinput-09 = ["dep:input"]
unstable-wgpu-26 = [
    "i-slint-core/unstable-wgpu-26",
    "i-slint-renderer-skia?/unstable-wgpu-26",
    "i-slint-backend-winit?/unstable-wgpu-26",
]
unstable-winit-030 = ["i-slint-backend-winit"]

[lib]
name = "i_slint_backend_selector"
path = "lib.rs"

[dependencies.cfg-if]
version = "1"

[dependencies.i-slint-backend-testing]
version = "=1.13.1"
optional = true
default-features = false

[dependencies.i-slint-core]
version = "=1.13.1"
default-features = false

[dependencies.i-slint-core-macros]
version = "=1.13.1"
default-features = false

[dev-dependencies]

[build-dependencies.i-slint-common]
version = "=1.13.1"
default-features = false

[target.'cfg(not(target_os = "android"))'.dependencies.i-slint-backend-winit]
version = "=1.13.1"
features = [
    "default",
    "muda",
]
optional = true
default-features = false

[target.'cfg(not(target_os = "android"))'.dependencies.i-slint-renderer-skia]
version = "=1.13.1"
optional = true
default-features = false

[target.'cfg(not(target_os = "wasm"))'.dependencies.i-slint-backend-qt]
version = "=1.13.1"
optional = true
default-features = false

[target.'cfg(target_os = "linux")'.dependencies.i-slint-backend-linuxkms]
version = "=1.13.1"
features = ["default"]
optional = true
default-features = false

[target.'cfg(target_os = "linux")'.dependencies.input]
version = "0.9.0"
optional = true
default-features = false
