# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.82"
name = "skia-safe"
version = "0.87.0"
authors = ["Armin Sander <armin@replicator.org>"]
build = false
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Safe Skia Bindings for Rust"
homepage = "https://github.com/rust-skia/rust-skia"
documentation = "https://rust-skia.github.io/doc/skia_safe"
readme = "README.md"
keywords = [
    "skia",
    "rust-bindings",
    "vulkan",
    "opengl",
    "pdf",
]
categories = [
    "api-bindings",
    "graphics",
    "multimedia::images",
    "rendering::graphics-api",
    "visualization",
]
license = "MIT"
repository = "https://github.com/rust-skia/rust-skia"

[features]
all-linux = [
    "gl",
    "egl",
    "vulkan",
    "x11",
    "wayland",
    "textlayout",
    "svg",
    "webp",
]
all-macos = [
    "gl",
    "vulkan",
    "metal",
    "textlayout",
    "svg",
    "webp",
]
all-windows = [
    "gl",
    "vulkan",
    "d3d",
    "textlayout",
    "svg",
    "webp",
]
binary-cache = ["skia-bindings/binary-cache"]
d3d = [
    "gpu",
    "windows",
    "skia-bindings/d3d",
]
default = [
    "binary-cache",
    "embed-icudtl",
    "pdf",
]
egl = [
    "gl",
    "skia-bindings/egl",
]
embed-freetype = ["skia-bindings/embed-freetype"]
embed-icudtl = ["skia-bindings/embed-icudtl"]
freetype-woff2 = ["skia-bindings/freetype-woff2"]
gl = [
    "gpu",
    "skia-bindings/gl",
]
gpu = []
metal = [
    "gpu",
    "skia-bindings/metal",
]
no-compile = ["skia-bindings/no-compile"]
pdf = ["skia-bindings/pdf"]
save-svg-images = []
svg = [
    "skia-bindings/svg",
    "dep:base64",
    "dep:percent-encoding",
    "skia-svg-macros",
]
textlayout = ["skia-bindings/textlayout"]
ureq = ["dep:ureq"]
use-system-jpeg-turbo = ["skia-bindings/use-system-jpeg-turbo"]
vulkan = [
    "gpu",
    "skia-bindings/vulkan",
]
vulkan-window = [
    "dep:ash",
    "dep:vulkano",
    "winit/rwh_05",
]
wayland = [
    "egl",
    "skia-bindings/wayland",
]
webp = [
    "webp-encode",
    "webp-decode",
]
webp-decode = ["skia-bindings/webp-decode"]
webp-encode = ["skia-bindings/webp-encode"]
x11 = [
    "gl",
    "skia-bindings/x11",
]

[lib]
name = "skia_safe"
path = "src/lib.rs"
doctest = false

[[example]]
name = "d3d-window"
path = "examples/d3d-window/main.rs"

[[example]]
name = "gl-window"
path = "examples/gl-window/main.rs"

[[example]]
name = "hello"
path = "examples/hello/main.rs"

[[example]]
name = "icon"
path = "examples/icon/main.rs"

[[example]]
name = "metal-window"
path = "examples/metal-window/main.rs"

[[example]]
name = "svg"
path = "examples/svg/main.rs"

[[example]]
name = "vulkan-window"
path = "examples/vulkan-window/main.rs"

[[test]]
name = "codec"
path = "tests/codec.rs"

[[test]]
name = "send_sync"
path = "tests/send_sync.rs"

[[test]]
name = "shaper"
path = "tests/shaper.rs"

[dependencies.ash]
version = "^0.38.0"
optional = true

[dependencies.base64]
version = "0.22.0"
optional = true

[dependencies.bitflags]
version = "2.0"

[dependencies.lazy_static]
version = "1.4"

[dependencies.percent-encoding]
version = "2.3.1"
optional = true

[dependencies.skia-bindings]
version = "=0.87.0"
default-features = false

[dependencies.skia-svg-macros]
version = "0.1.0"
optional = true

[dependencies.ureq]
version = "3.0.4"
optional = true

[dependencies.vulkano]
version = "0.35"
optional = true

[dependencies.windows]
version = "0.61.1"
features = [
    "Win32",
    "Win32_Graphics",
    "Win32_Graphics_Dxgi",
    "Win32_Graphics_Direct3D12",
    "Win32_Graphics_Direct3D",
    "Win32_Foundation",
    "Win32_Graphics_Dxgi_Common",
]
optional = true

[dev-dependencies.serial_test]
version = "3.0"

[dev-dependencies.static_assertions]
version = "1.1"

[dev-dependencies.winit]
version = "0.30.2"

[target.'cfg(all(not(target_os = "android"), not(target_os = "emscripten"), not(target_os = "ios")))'.dev-dependencies.gl-rs]
version = "0.14.0"
package = "gl"

[target.'cfg(all(not(target_os = "android"), not(target_os = "emscripten"), not(target_os = "ios")))'.dev-dependencies.glutin]
version = "0.32.0"

[target.'cfg(all(not(target_os = "android"), not(target_os = "emscripten"), not(target_os = "ios")))'.dev-dependencies.glutin-winit]
version = "0.5.0"

[target.'cfg(all(not(target_os = "android"), not(target_os = "emscripten"), not(target_os = "ios")))'.dev-dependencies.raw-window-handle]
version = "0.6.0"

[target.'cfg(target_os = "macos")'.dev-dependencies.cocoa]
version = "0.26.0"

[target.'cfg(target_os = "macos")'.dev-dependencies.core-graphics-types]
version = "0.1.1"

[target.'cfg(target_os = "macos")'.dev-dependencies.foreign-types-shared]
version = "0.1.1"

[target.'cfg(target_os = "macos")'.dev-dependencies.metal-rs]
version = "0.24.0"
package = "metal"

[target.'cfg(target_os = "macos")'.dev-dependencies.objc]
version = "0.2.7"

[target.'cfg(target_os = "macos")'.dev-dependencies.raw-window-handle]
version = "0.6.0"

[target.'cfg(target_os = "windows")'.dev-dependencies.anyhow]
version = "1.0.75"

[target.'cfg(target_os = "windows")'.dev-dependencies.windows]
version = "0.61.1"
features = [
    "Win32",
    "Win32_Graphics",
    "Win32_Graphics_Dxgi",
    "Win32_Graphics_Direct3D12",
    "Win32_Graphics_Direct3D",
    "Win32_Foundation",
    "Win32_Graphics_Dxgi_Common",
]
